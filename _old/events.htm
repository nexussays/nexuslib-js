<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<title>Javascript Event Handling</title>
<link href="./favicon.ico" rel="Shortcut Icon" />
<link href="./styles/main.css" rel="stylesheet" type="text/css" />
<script src="./core.js" type="text/javascript"></script>
<script src="./debug.js" type="text/javascript"></script>
<script src="./nnet.js" type="text/javascript"></script>
<script src="./webtest.js" type="text/javascript"></script>
<style type="text/css">
textarea
{
	width: 40em;
}
input[type="text"]
{
	font-family:Consolas;
}
</style>
<script type="text/javascript">
var keyevent, mousemoveevent, mouseclickevent;
window.load.go = function()
{
	//create the dropdown menu
	CreateMenu("nav", Sections.Javascript.Menu);

	Debug.outputSource = get.id("output");
	Debug.allowMultiple = true;

	//HANDLERS
	keyevent = get.id("keyevent");
	mousemoveevent = get.id("mousemoveevent");
	mouseclickevent = get.id("mouseclickevent");

	get("input[type='checkbox']").forEach(function(x)
	{
		x.onclick = detectevent_click;
		x.checked = false;
		x.onclick();
	});

	log.el = get.id("log");
	log.clear();
	get.id("log_clear").onclick = log.clear;
};
//execute the event handling function on window load as well
window.load.evt = evt;
function evt(e)
{
	e.preventDefault();
	
	Debug.clear();
	//output our custom information on the event
	Debug.Simple(e, ["pageX", "pageY", "screenX", "screenY", "clientX", "clientY", "target", "relatedTarget", "mouse", "key"]);
	//output information on the entire event
	Debug.Event(e);
    //add to list of events and scroll the textbox
	log.write(e.type + " " + this + " (" + e.pageX + ", " + e.pageY + ")");
	
	if("value" in this)
	{
		this.value = "";
	}
	
	e.stop();
}
//aditional utility functions
function detectevent_click()
{
    var el;
    switch(this.id)
    {
        case "keyup":
        case "keydown":
        case "keypress":
            el = get.id("keyevent");
            break;
        case "click":
        case "mouseup":
        case "mousedown":
            el = get.id("mouseclickevent");
            break;
        case "mousemove":
        case "mouseout":
        case "mouseover":
            el = get.id("mousemoveevent");
            break;
        default:
            throw Error("There is no handling for \"" + this.id + "\"");
    }
    
    log.write(this.id + (this.checked ? " ADDED" : " REMOVED"));
    if(this.checked)
    {
    	el.addEvent(this.id, evt);
    	//el.dispatchEvent(this.id);
    }
    else if(objtype(el.removeEvent) == "function")
    {
    	el.removeEvent(this.id, evt);
    }
}
var log = 
{
    clear : function()
    {
        if(log.el)
        {
        	log.el.value = "time   : e.type [this] (e.pageX, e.pageY)\r\n";
        }
    },
    write : function()
    {
        var time = new Date();
        if(log.el)
        {
            time = time.getUTCMinutes() + "" + time.getUTCSeconds() + "" + time.getUTCMilliseconds();
            while(time.length < 7)
            {
                time += " ";
            }
            log.el.value += time + ": " + arguments[0] + "\r\n";
            log.el.scrollTop = log.el.scrollHeight;
        }
    }
};
</script>

</head>
<body>
<div id="nav"></div>
<h1>Javascript Event Handling</h1>
<fieldset>
	<legend>Event information</legend>
	<dl class="flat" style="float:left;width:40%;line-height:2em">
		<dt>
		    key events:<input type="text" id="keyevent" autocomplete="off" />
        </dt>
        <dd>
            <label for="keyup">detect up:<input type="checkbox" id="keyup" /></label>
            <label for="keydown">detect down:<input type="checkbox" id="keydown" /></label>
            <label for="keypress">detect press:<input type="checkbox" id="keypress" /></label>
		</dd>
		<dt>
		    mouse click events:<img src="../block.png" class="testingbox" id="mouseclickevent" alt="[EVENT]" />
		</dt>
		<dd>
			<label for="mouseup">detect up:<input type="checkbox" id="mouseup" /></label>
			<label for="mousedown">detect down:<input type="checkbox" id="mousedown" /></label>
			<label for="mousepress">detect click:<input type="checkbox" id="click" /></label>
		</dd>
		<dt>
		    mouse move events:<img src="../block.png" class="testingbox" id="mousemoveevent" alt="[EVENT]" />
		</dt>
		<dd>
			<label for="mousover">detect over:<input type="checkbox" id="mouseover" /></label>
			<label for="mouseout">detect out:<input type="checkbox" id="mouseout" /></label>
			<label for="mousemove">detect move:<input type="checkbox" id="mousemove" /></label>
		</dd>
	</dl>
	<div style="float:left;width:40%;">
		<textarea rows="8" readonly="readonly" cols="10" id="log"></textarea>
		<p>
			<button type="button" id="log_clear">
				<img src="../images/silk/page_white.png" /> Clear
			</button>
		</p>
	</div>
	<div class="clear"></div>
</fieldset>
<h4>Output:</h4>
<div id="output"></div>
</body>
</html>