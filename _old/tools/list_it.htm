<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<title>Create a List</title>
<link href="../favicon.ico" rel="Shortcut Icon" />
<link href="../styles/main.css" rel="stylesheet" type="text/css" />
<script src="../core.js" type="text/javascript"></script>
<style type="text/css">
textarea
{
    width:50em;
}
#info
{
    background-color:#f9f9f9;
}
textarea#output
{
    font-family:monospace;
    width:100%;
    border:ridge 2px #333;
    border-right-width:1px;
    visibility:hidden;
}
</style>
<script type="text/javascript">
/*THIS SHOULD BE A COMMENT MOTHERFUCKER*/
function Go()
{
	var results = new Array();
	var text = get("#block").value;
	var output = get("#output");
	var split_on;

	//hide it while updates are taking place
	output.style.visibility = "hidden";

	//clear the output and info divs
	ClearResults();

	var r = new RadioCollection("split");
	switch(r.value)
	{
		case "space":
			split_on = " ";
			break;
		case "comma":
			split_on = ",";
			break;
		case "newline":
			split_on = "\n";
			break;
	}
	//replace all whitespace characters with spaces
	text = Cleanup(text, split_on);

	//split on spaces
	results = text.split(split_on);
	//replace form text with cleaned up text
	//get("#output").value = (results.sort()).join(" ");;
	//sort by word size, smallest to largest
	//results.sort(sortit);

	//get wrapping elements
	//BLOCK ELEMENTS SHOULD BE LISTED BEFORE INLINE ELEMENTS
	var wrap_start = new Array();
	var wrap_end = new Array();
	if(get("#wrap_div").checked)
	{
		wrap_start.push("<div>");
		wrap_end.push("</div>");
	}
	if(get("#wrap_p").checked)
	{
		wrap_start.push("<p>");
		wrap_end.unshift("</p>");
	}
	if(get("#wrap_anchor").checked)
	{
		wrap_start.push("<a href=\"link\">");
		wrap_end.unshift("</a>");
	}
    
	//set spacing
	var spacing = "";
	if(get("#space_spaces").checked)
	{
		spacing = "    ";
	}
	else if(get("#space_tabs").checked)
	{
		spacing = "\t";
	}
	else if(get("#space_none").checked)
	{
		spacing = "";
	}

	//get type
	//default to "ul" instead of checking for it or putting it in an else block
	var listType = "ul";
	var listItemType = "li";
	if(get("#type_ol").checked)
	{
		listType = "ol";
	}
	else if(get("#type_dl").checked)
	{
		listType = "dl";
		listItemType = "dd";
	}
	else if (get("#type_text").checked)
	{
		listType = "text";
		listItemType = "";
	}

	//output results
	if (listType != "text")
	{
		Write("output", "<" + listType + ">");
	}

	results.sort();
	for(var x = 0; x < results.length; x++)
	{
		if (listType == "text")
		{
			Write("output", results[x].trim());// + "\n");
		}
		else
		{
			Write("output", spacing + "<" + listItemType + ">\n" +
				spacing + spacing + wrap_start.join('') + results[x].trim() + wrap_end.join('') + "\n" +
				spacing + "</" + listItemType + ">");
		}
	}

	if (listType != "text")
	{
		Write("output", "</" + listType + ">");
	}

	Write("info","Number of Items: " + results.length);

	output.style.visibility = "visible";

	return false;
}

function ClearResults()
{
    get("#output").value = "";
    get("#info").innerHTML = "";
}

function Write(id, string)
{
	var div = get("#"+id);
	switch(id)
	{
		case "output":
			div.value += string + "\n";
			break;
		case "info":
			div.innerHTML += string + "<br />";
			break;
	}
}

function Cleanup(string, split_on)
{
	//replace carriage returns with line feeds
	string = string.replace(/\r/gi, "\n");
	//replace multiple line feeds with one line feed
	string = string.replace(/\n+/gi, "\n");

	if(get("#clean_asterisk").checked)
	{
		string = string.replace(/\*/g, "");
	}
	if(get("#clean_bullet").checked)
	{
		string = string.replace(/·/g, "");
	}
	if(get("#clean_numbers").checked)
	{
		string = string.replace(/\d(\.|\))?/g, "");
	}
	if(get("#clean_punctuation").checked)
	{
		string = string.replace(/:|\.|;|,/g, "");
	}
	if(get("#clean_numbersign").checked)
	{
		string = string.replace(/\#/g, "");
	}
	if(get("#clean_whitespace").checked)
	{
		string = string.replace(/\s+/g, " ");
	}
	if(get("#clean_duplicates").checked)
	{
		var hash = {};
		var array = string.split(split_on);
		var newarray = [];
		for(var i = 0; i < array.length; ++i)
		{
			if(!hash[array[i]])
			{
				newarray.push(array[i]);
				hash[array[i]] = true;
			}
		}
		string = newarray.join(split_on);
	}
	return string.trim();
}
</script>

</head>
<body>
<h1>List It</h1>
<fieldset>
	<legend>Source text</legend>
	<div>
		<textarea id="block" rows="6" cols="20">    * const
    * extern
    * internal
    * new
    * override
    * private</textarea>
	</div>
	<h4 class="inline">Ignore:</h4>
	<ul class="inline">
		<li>
			<label><input type="checkbox" id="clean_whitespace" />whitespace</label>
		</li>
		<li>
			<label><input type="checkbox" id="clean_asterisk" checked="checked" />asterisks (*)</label>
		</li>
		<li>
			<label><input type="checkbox" id="clean_numbersign" checked="checked" />number signs (#)</label>
		</li>
		<li>
			<label><input type="checkbox" id="clean_bullet" checked="checked" />bullets (&middot;)</label>
		</li>
		<li>
			<label><input type="checkbox" id="clean_numbers" />numbers</label>
		</li>
		<li>
			<label><input type="checkbox" id="clean_punctuation" />punctuation (: ; . ,)</label>
		</li>
		<li>
			<label><input type="checkbox" id="clean_duplicates" checked="checked" />duplicates</label>
		</li>
	</ul>
	<br />
	<h4 class="inline">Split On:</h4>
	<ul class="inline">
		<li>
			<label><input type="radio" name="split" value="space" />space</label>
		</li>
		<li>
			<label><input type="radio" name="split" value="newline" checked="checked" />newline</label>
		</li>
		<li>
			<label><input type="radio" name="split" value="comma" />comma</label>
		</li>
	</ul>
	<br />
	<h4 class="inline">Wrap In:</h4>
	<ul class="inline">
		<li>
			<label><input type="checkbox" id="wrap_anchor" />anchor</label>
		</li>
		<li>
			<label><input type="checkbox" id="wrap_p" checked="checked" />paragraph</label>
		</li>
		<li>
			<label><input type="checkbox" id="wrap_div" />div</label>
		</li>
	</ul>
	<br />
	<h4 class="inline">Space With:</h4>
	<ul class="inline">
		<li>
			<label><input type="radio" name="spacing" id="space_spaces" />spaces</label>
		</li>
		<li>
			<label><input type="radio" name="spacing" id="space_tabs" checked="checked" />tabs</label>
		</li>
		<li>
			<label><input type="radio" name="spacing" id="space_none" />nothing</label>
		</li>
	</ul>
	<br />
	<h4 class="inline">Create:</h4>
	<ul class="inline">
		<li>
			<label><input type="radio" name="type" id="type_text" checked="checked" />plain text</label>
		</li>
		<li>
			<label><input type="radio" name="type" id="type_ul" checked="checked" />unordered</label>
		</li>
		<li>
			<label><input type="radio" name="type" id="type_ol" />ordered</label>
		</li>
		<li>
			<label><input type="radio" name="type" id="type_dl" />definition</label>
		</li>
	</ul>
	<p><input type="button" value="Get List" id="get" onclick="Go()" /></p>
</fieldset>
<div id="info"></div>
<h4>Output:</h4>
<div><textarea id="output" rows="15" cols="1"></textarea></div>
</body>
</html>
